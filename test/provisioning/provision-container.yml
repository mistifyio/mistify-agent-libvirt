- hosts: localhost
  connection: local
  tasks:
    - name: Grab vault pass
      shell: cat ~/.vault_pass
      register: vault_pass
      tags: test_only

    - name: Create a started container
      lxc_container:
        name: test-container
        container_log: true
        template: download
        state: started
        template_options: --dist ubuntu --arch amd64 --release trusty
        config: "$HOME/.config/lxc/default.conf"
        container_command: |
          apt-get update
          apt-get install -y openssh-server apt-transport-https
          mkdir -p /root/.ssh
          mkdir -p /home/ubuntu/.ssh
          echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCOZAvvd4r7P0wAzx4vIhO7WtwhCE+LySBjV5q9hgR70ccWjVCL+OaK2LqohlL4QdwMOSsUcybwekl3gVtIIMPhqfp+vWM2QeMUO7bnU69mawYkb0EhJLUfNgWihsXirnABhd/jeRcfNtR0icxd/g1w9f28ozpzJzHlyNq3QxJDT6M26+4gY02O4CDH43H9lhYpvURqOWi6jjXMPf3R84NIYY6jTUln8G44sJf9U0sRIH7ulr/o7V9VSaK9esqH8pBoyLlxTcVmO3ve9hYeoGl0BujfX6NA26Eb0GX4CSAF9GayGA8AmiiyVbrJ+y5DCL9hNjNF9kST7JNKmAdBKr3v terraform > /root/.ssh/authorized_keys
          echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPmV7bV8TinX0fDySCiCaQygXUNuOJAtv3+fghgknEw0Nkn84/RiOm3cbtzzbTNh0BxsASWy+1wjx2TFEjB45XUYhEPZvlycCnex8zmj9mJJwlRi7NMcBKVMLQV+H4LltcLXDTUSNpWnaPmfJxhQrlaaF3NkCUPrycxV5LgUJ6ZsoQ1lqp4G80a421djytKFM2PxN4R/6fK6g1K7eStMKn6vSXsJjhlEw7j5QmDQeYBsOiVUqodxGwywS/QwFjPMaB17G3ZsTMknEpxWhoh7a4dSuXKCX0Rd7jR3I+kRfqpcl7qKrybX5SvMF3zXAD+3N5yqAYIc7m4jwBn4or+HqT yoni@omniti.com >> /root/.ssh/authorized_keys
          echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCOZAvvd4r7P0wAzx4vIhO7WtwhCE+LySBjV5q9hgR70ccWjVCL+OaK2LqohlL4QdwMOSsUcybwekl3gVtIIMPhqfp+vWM2QeMUO7bnU69mawYkb0EhJLUfNgWihsXirnABhd/jeRcfNtR0icxd/g1w9f28ozpzJzHlyNq3QxJDT6M26+4gY02O4CDH43H9lhYpvURqOWi6jjXMPf3R84NIYY6jTUln8G44sJf9U0sRIH7ulr/o7V9VSaK9esqH8pBoyLlxTcVmO3ve9hYeoGl0BujfX6NA26Eb0GX4CSAF9GayGA8AmiiyVbrJ+y5DCL9hNjNF9kST7JNKmAdBKr3v terraform > /home/ubuntu/.ssh/authorized_keys
          echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDPmV7bV8TinX0fDySCiCaQygXUNuOJAtv3+fghgknEw0Nkn84/RiOm3cbtzzbTNh0BxsASWy+1wjx2TFEjB45XUYhEPZvlycCnex8zmj9mJJwlRi7NMcBKVMLQV+H4LltcLXDTUSNpWnaPmfJxhQrlaaF3NkCUPrycxV5LgUJ6ZsoQ1lqp4G80a421djytKFM2PxN4R/6fK6g1K7eStMKn6vSXsJjhlEw7j5QmDQeYBsOiVUqodxGwywS/QwFjPMaB17G3ZsTMknEpxWhoh7a4dSuXKCX0Rd7jR3I+kRfqpcl7qKrybX5SvMF3zXAD+3N5yqAYIc7m4jwBn4or+HqT yoni@omniti.com >> /home/ubuntu/.ssh/authorized_keys
          chown -R ubuntu:ubuntu /home/ubuntu/.ssh
          echo StrictHostKeyChecking no > /root/.ssh/config
          echo StrictHostKeyChecking no > /home/ubuntu/.ssh/config
          echo {{vault_pass}} > /root/.vault_pass
          echo {{vault_pass}} > /home/ubuntu/.vault_pass
          sudo service ssh restart
      register: lxc_container_info
      tags: test_only

        # dynamically update inventory to make it available down the playbook
    - name: register new container hostname
      add_host: name="{{lxc_container_info.lxc_container.ips[0]}}" groups="test-container"
      tags: test_only

# Install as root, to setup ubuntu as a sudoer
- hosts: test-container
  remote_user: root
  vars_files:
      - 'vars/vaulted_vars'
  roles:
    - yaegashi.blockinfile
    - { role: security, tags: security }
    - { role: general-slave-setup }

# Install as ubuntu
- hosts: test-container
  remote_user: ubuntu
  sudo: yes
  roles:
    - { role: kbrebanov.unzip }
    - { role: bobbyrenwick.pip }
    - { role: install-common-python-packages }
    - role: gotansible.golang
      golang_version: 1.4.2
      golang_per_user: false
      tags: golang
    - { role: install-golang-dependencies, tags: ['golang'] }
    - role: etcd
      etcd_peers_group: etcd
      tags: ['golang_deps', 'golang']
    - { role: install-openvswitch }
    - { role: configure-mistify }
    - role: laggyluke.add-ssh-keys-from-github
      add_ssh_keys_from_github:
        usernames:
          - omniti-devops
  tasks:
    - name: Copy go test executor script to container
      template: src=templates/go_test_executor.py dest=/tmp/go_test_executor.py owner=ubuntu group=ubuntu mode=0755
      tags: test_only
    - name: Run go kvm tests
      shell: |
          mkdir workspace
          cd $WORKSPACE
          git clone {{mistify_agent_repo_url}} $WORKSPACE/src/{{mistify_agent_repo_name}}
          cd $WORKSPACE/{{mistify_agent_repo_name}}
          python /tmp/go_test_executor.py

      # lxc_container:
      #   name: test-container
      #   state: stopped
      #   container_log: true
      #   template: download
      #   template_options: --dist ubuntu --arch amd64 --release trusty
      #   config: "$HOME/.config/lxc/default.conf"
      #   container_command: |
      #     export WORKSPACE=$HOME/gotest_workspace
      #     export REPO={{mistify_agent_repo_name}}
      #     mkdir $WORKSPACE
      #     cd $WORKSPACE
      #     git clone {{mistify_agent_repo_url}} $WORKSPACE/src/{{mistify_agent_repo_name}}
      #     cd $WORKSPACE/{{mistify_agent_repo_name}}
      #     python /tmp/go_test_executor.py
      # register: output
      tags: test_only
    - name: Print output
      debug: var=output
  handlers:
    - include: roles/common/handlers/main.yml
  tags: